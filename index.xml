<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bowen She ❤️ Shirong Liang</title>
    <link>/</link>
    <description>Recent content on Bowen She ❤️ Shirong Liang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-ch</language>
    <lastBuildDate>Tue, 15 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Documentary Review: 2015 NBA Champions: Golden State Warriors</title>
      <link>/blog/management/motivation/gs-warrior-2014-15-champ/</link>
      <pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/management/motivation/gs-warrior-2014-15-champ/</guid>
      <description>To me, I started to hear that Stephen Curry was a thing after they beat Cavs led by Lebron James in 2015. However, during then, I was indulged myself in Dota2 and after Yao retired and the hype finale to see Dirk Nowitzki beat the most talented team Miami Heat, I had lost my interest in NBA for the most part reason that I didn&amp;rsquo;t like superstars grouped together to make the game less fair for other teams.</description>
    </item>
    
    <item>
      <title>How-TO use load balancer</title>
      <link>/blog/system-design/load-balancer/</link>
      <pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/system-design/load-balancer/</guid>
      <description>Load balancer is another critical component in distributed system. it helps to spread the traffic across a cluster of servers to improve responsiveness and availability of applications, websites or databases. LB also tracks of the status of all the resources while distributing requests. If a server is not available to take new requests, or is not responding or has elevated error rate, the load balance will not pass on requests to that server.</description>
    </item>
    
    <item>
      <title>Advanced Topics in Python</title>
      <link>/blog/python/advanced_python_usage/</link>
      <pubDate>Wed, 02 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/python/advanced_python_usage/</guid>
      <description>Iterators and Generators in Python The iteration protocol class myIterator: def __init__(self): pass def __iter__(self): return self def __next__(self):  The protocol to create an Iterator contains two main parts: __iter__ and __next__. The __iter__ returns the object we want to iterate over and the __next__ mehtod is automatically on eahc iteration and that returns the value for the current iteration. Notice: Python 2 use next and Python 3 use __next__()</description>
    </item>
    
    <item>
      <title>How to make your code faster by using a cache in Python</title>
      <link>/blog/system-design/cache/</link>
      <pubDate>Wed, 02 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/system-design/cache/</guid>
      <description>🚩 原文
Summary points:
A cache system is a component that stores data so that future requests for data we already served in the past, could be accomplished faster.
There are a lot of solutions that can be used to implement a cache system but today I want to point out a specific solution that allows your Python code to use a cache for everyday use, without setting up a complex (and yet more powerful) system like Redis or other: the package cachetools.</description>
    </item>
    
    <item>
      <title>Warining signs and hidden perks working in Companies like Google</title>
      <link>/blog/careers/most-valuable-article-for-me-in-dec-2018/</link>
      <pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/careers/most-valuable-article-for-me-in-dec-2018/</guid>
      <description>Recent useful quora questions and articles..
What don&amp;rsquo;t people tell you about working at a top tech company (Google, Amazon, Facebook, Apple, Netflix, Dropbox, Microsoft, etc.)? 传送门 portal
What is the best way to prepare for ACM-ICPC regionals in one month? 传送门 portal
Motivation  how to change the subconscious thinking pattern? 1. environment before 7 years 2. repetition with joyness</description>
    </item>
    
    <item>
      <title>Python Quiz 01</title>
      <link>/blog/python/python-quiz/</link>
      <pubDate>Sat, 29 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/python/python-quiz/</guid>
      <description>Bring out a white paper and write all the answers to the quiz on the paper. See if you can finish all of these answers.
 How do you create a array which contains 2 - 10 in one-liner?
CLICK ME 
# using list comprehension [i for i in range(2, 11)] # Or list(range(2, 11))  

 How do you randomly select 3 numbers from an integer array &amp;ldquo;&amp;lsquo;A&amp;rdquo;&amp;rsquo;?</description>
    </item>
    
    <item>
      <title>LeetCode Weekly Contest 116</title>
      <link>/blog/leetcode/weekly-contest-116/</link>
      <pubDate>Fri, 28 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/leetcode/weekly-contest-116/</guid>
      <description>Maximum Width Ramp 🔗 LC962
Given an array A of integers, a ramp is a tuple (i, j) for which i &amp;lt; j and A[i] &amp;lt;= A[j]. The width of such a ramp is j - i.
Find the maximum width of a ramp in A. If one doesn&amp;rsquo;t exist, return 0.
&amp;gt; Example 1: Input: [6,0,8,2,1,5] Output: 4 Explanation: The maximum width ramp is achieved at (i, j) = (1, 5): A[1] = 0 and A[5] = 5.</description>
    </item>
    
    <item>
      <title>狗家 oniste Part 01</title>
      <link>/blog/%E9%9D%A2%E7%BB%8F/google/onsite/onsite-01/</link>
      <pubDate>Mon, 17 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/%E9%9D%A2%E7%BB%8F/google/onsite/onsite-01/</guid>
      <description>Disclaimer: The following resources are from 1point3acre.com(以下资源来自一亩三分地)
LeetCode 380 medium https://leetcode.com/problems/insert-delete-getrandom-o1/
LeetCode 381 hard https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed/
Fraction to Recurring Decimal 🔗 LeetCode 166
设计一个系统， 客户端发一些userid, key, value过来， 然后在一个dashboard上实时显示过去某个时间段内发消息最多的10个userid， 和对应的key/value 这里后面的时间也让白板写代码， 问如果是单机代码题这个怎么做. 🔗 [LeetCode 460]https://leetcode.com/problems/lfu-cache/
第一轮 2D grid，从起点左上角到右下角一共多少种走法。 Followup: 如果grid中有一个障碍物，如何计算 Followup2: 如果grid中有不止一个障碍物，如何计算
第二轮 在一个非常长的一维坐标系中，给一个List的线段（均平行于x轴，线段给出两端点坐标），这些线段有可能有重叠。请问所有给出的线段的总长度是多少（重叠部分只可计入一次） Followup: 请实现一个添加线段的方法，每次输入一个添加的线段，返回当前所有线段的总长度（重叠部分只可计入一次）
第三轮 假设云虚拟机的使用会产生一系列日志，格式如下 { int vmId, int numCourse, int startTime, int endTime} 请在输入的一个list的日志中，找到并发使用量最多course的并发量数值返回。 Followup1: 如果日志中的time从second变成粒度非常小的microsecond怎么办 Followup2: 如果日志记录的输入量非常巨大怎么办
第四轮 给一个字典，里面是不重复的字符。再给一个输入的字符串。 请在这个字符串中找到所有不完全包含字典内字符的子字符串的个数并返回。
第五轮 假设用户交给你一个Binary Tree结构的数据，请设计一个API程序，实现以下方法 getRandomNodeVal() Followup: 在此基础上实现如下两个方法 addNewNode(val) removeNode(val)</description>
    </item>
    
    <item>
      <title>狗家电面 Part 01</title>
      <link>/blog/%E9%9D%A2%E7%BB%8F/google/%E7%94%B5%E9%9D%A2/phone_interview1/</link>
      <pubDate>Mon, 17 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/%E9%9D%A2%E7%BB%8F/google/%E7%94%B5%E9%9D%A2/phone_interview1/</guid>
      <description>Disclaimer: The following resources are from 1point3acre.com(以下资源来自一亩三分地)
Find next clock time 🚩 原帖
Similiar question: 🔗 LeetCode 31 Next Permutation
Given the clock time in string format &amp;ldquo;xx:xx&amp;rdquo; as the input, e.g. &amp;ldquo;22:12&amp;rdquo;, find the closest clock time which is larger than the input time. All the inputs are valid.
Example 1 Input: &amp;ldquo;22:12&amp;rdquo;
Output: &amp;ldquo;22:21&amp;rdquo;
Example 2: Input: &amp;ldquo;13:09&amp;rdquo;
Output: &amp;ldquo;19:03&amp;rdquo;
Example 3: Input: &amp;ldquo;23:59&amp;rdquo;
Output: &amp;ldquo;23:59&amp;rdquo;
Explanation: Since there is no time larger than &amp;ldquo;23:59&amp;rdquo;, we return the original time.</description>
    </item>
    
    <item>
      <title>Knapsack Problem Summary</title>
      <link>/blog/dynamic-programming/0-1_knapsack/</link>
      <pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/dynamic-programming/0-1_knapsack/</guid>
      <description>Classic Knapsack Problem Given a set of items, each with a weight and a value, determine the number of each item to include in a collection so that the total weight is less than or equal to a given limit and return the largest possible value which can be collected.
It derives its name from the problem faced by someone who is constrained by a fixed-size knapsack and must fill it with the most valuable items.</description>
    </item>
    
    <item>
      <title>Leetcode 959 Regions Cut By Slashes</title>
      <link>/blog/leetcode/lc959/</link>
      <pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/leetcode/lc959/</guid>
      <description>Problem Description In a N x N grid composed of 1 x 1 squares, each 1 x 1 square consists of a /, \, or blank space. These characters divide the square into contiguous regions.
(Note that backslash characters are escaped, so a \ is represented as &amp;quot;\\&amp;quot;.)
Return the number of regions.
Example 1 Input:
[ &amp;quot; /&amp;quot;,
&amp;nbsp; &amp;quot;/ &amp;quot; ]
Output: 2
Explanation: The 2x2 grid is as follows:</description>
    </item>
    
    <item>
      <title>Designing a URL Shortening service like TinyURL</title>
      <link>/blog/system-design/design-tinyurl/</link>
      <pubDate>Sat, 15 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/system-design/design-tinyurl/</guid>
      <description>Why do we need URLs shortening? URL shortening is used to create shorter aliases for long URLs. We call these shortened aliases &amp;ldquo;short links&amp;rdquo;. Users are redirected to the original URLs when they hit those short links. Short links save a lot of space when displayed, printed, messaged, tweeted. Additionally, users are less likely to mistype shorter URLs.
The shortened URL is nearly one-third of the size of the actual URL.</description>
    </item>
    
    <item>
      <title>Assert yourself</title>
      <link>/blog/writing-solid-code/chp2-assert-yourself/</link>
      <pubDate>Fri, 14 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/writing-solid-code/chp2-assert-yourself/</guid>
      <description>Defensive Programming &amp;ndash; Using assertions and exceptions correctly what is Defensive programming? Defensive programming is like defensive driving, which means you are never sure what other driviers will do. The mindset behind it is that you expect incorrect situations and handle it correctly.
What to handle correctly? Unusual execution flow, unusual situations, invalid input and state
Protecting from invalid input The principle should be &amp;ldquo;garbage in, exception out&amp;rdquo; instead of &amp;ldquo;garbage in, garbage out&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Leetcode 956 Tallest Billboard</title>
      <link>/blog/leetcode/lc956/</link>
      <pubDate>Tue, 11 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/leetcode/lc956/</guid>
      <description>Problem Description You are installing a billboard and want it to have the largest height. The billboard will have two steel supports, one on each side. Each steel support must be an equal height.
You have a collection of rods which can be welded together. For example, if you have rods of lengths 1, 2, and 3, you can weld them together to make a support of length 6.</description>
    </item>
    
    <item>
      <title>Fancy App 1</title>
      <link>/itemized/item1/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/itemized/item1/</guid>
      <description> App 1 </description>
    </item>
    
    <item>
      <title>Fancy App 2</title>
      <link>/itemized/item2/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/itemized/item2/</guid>
      <description> App 2 </description>
    </item>
    
    <item>
      <title>Fancy App 3</title>
      <link>/itemized/item3/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/itemized/item3/</guid>
      <description> App 3 </description>
    </item>
    
    <item>
      <title>Fancy App 4</title>
      <link>/itemized/item4/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/itemized/item4/</guid>
      <description> App 4 </description>
    </item>
    
    <item>
      <title></title>
      <link>/blog/%E9%9D%A2%E7%BB%8F/%E9%AB%98%E9%A2%91%E9%9D%A2%E7%BB%8F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/%E9%9D%A2%E7%BB%8F/%E9%AB%98%E9%A2%91%E9%9D%A2%E7%BB%8F/</guid>
      <description>Google
 expiration hashmap(map with timestamp)
 meeting room II
 k slots
 job schedule
 serialization
 iterator
  </description>
    </item>
    
  </channel>
</rss>